apiVersion: v1
kind: Namespace
metadata:
  name: github-copilot-ns
  labels:
    name: github-copilot-ns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-flask-app
  namespace: github-copilot-ns
  labels:
    app: python-flask-app
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: python-flask-app
  template:
    metadata:
      labels:
        app: python-flask-app
    spec:
      containers:
      - name: python-flask-app
        image: REGISTRY_LOGIN_SERVER/python-flask-app:latest
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: PORT
          value: "8080"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
---
apiVersion: v1
kind: Service
metadata:
  name: python-flask-app-service
  namespace: github-copilot-ns
  labels:
    app: python-flask-app
spec:
  type: ClusterIP
  selector:
    app: python-flask-app
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: python-flask-app-ingress
  namespace: github-copilot-ns
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: python-flask-app.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: python-flask-app-service
            port:
              number: 80
