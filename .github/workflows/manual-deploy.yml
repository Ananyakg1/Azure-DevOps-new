name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging
      image_tag:
        description: 'Image tag to deploy (default: latest)'
        required: false
        default: 'latest'
      skip_tests:
        description: 'Skip running tests'
        required: false
        default: false
        type: boolean

env:
  APP_NAME: python-flask-app
  IMAGE_NAME: python-flask-app
  NAMESPACE: github-copilot-ns

jobs:
  manual-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      if: ${{ !github.event.inputs.skip_tests }}
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Run tests
      if: ${{ !github.event.inputs.skip_tests }}
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
        python -m pytest test_app.py -v

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: |
          {
            "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
            "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
            "subscriptionId": "${{ secrets.AZURE_SUSCRIPTION_ID }}",
            "tenantId": "${{ secrets.AZURE_TENANT_ID }}"
          }

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: '1.28.0'

    - name: Get AKS credentials
      run: |
        az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }} --overwrite-existing

    - name: Replace variables in deployment file
      run: |
        sed -i 's|${REGISTRY_LOGIN_SERVER}|${{ secrets.REGISTRY_LOGIN_SERVER }}|g' k8s-deployment.yaml
        sed -i 's|${IMAGE_NAME}|${{ env.IMAGE_NAME }}|g' k8s-deployment.yaml
        sed -i 's|${GITHUB_SHA}|${{ github.event.inputs.image_tag }}|g' k8s-deployment.yaml

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s-deployment.yaml

    - name: Verify deployment
      run: |
        kubectl rollout status deployment/${{ env.APP_NAME }} -n ${{ env.NAMESPACE }} --timeout=300s
        kubectl get pods -n ${{ env.NAMESPACE }} -l app=${{ env.APP_NAME }}
        kubectl get svc -n ${{ env.NAMESPACE }} ${{ env.APP_NAME }}-service

    - name: Get deployment info
      run: |
        echo "Deployment completed successfully!"
        echo "Environment: ${{ github.event.inputs.environment }}"
        echo "Image tag: ${{ github.event.inputs.image_tag }}"
        echo "Namespace: ${{ env.NAMESPACE }}"
        echo ""
        echo "To access the application:"
        echo "kubectl port-forward svc/${{ env.APP_NAME }}-service 8080:80 -n ${{ env.NAMESPACE }}"
